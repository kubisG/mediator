{
  "version": 3,
  "file": "embedded-enterprises-ng6-golden-layout.js",
  "sources": [
    "ng://@embedded-enterprises/ng6-golden-layout/out/lib/multiwindow-service.ts",
    "ng://@embedded-enterprises/ng6-golden-layout/out/lib/module.ts",
    "ng://@embedded-enterprises/ng6-golden-layout/out/lib/golden-layout.component.ts",
    "ng://@embedded-enterprises/ng6-golden-layout/out/lib/fallback.ts",
    "ng://@embedded-enterprises/ng6-golden-layout/out/lib/golden-layout.service.ts",
    "ng://@embedded-enterprises/ng6-golden-layout/out/lib/state.ts",
    "ng://@embedded-enterprises/ng6-golden-layout/out/lib/config.ts"
  ],
  "sourcesContent": [
    "export function MultiWindowInit(): void {\n  if (!window.opener) {\n    (window as any).__services = new (window as any).Map();\n    (window as any).__serviceConstructors = new (window as any).Map();\n  }\n}\n\nexport type Constructor<T> = {\n  new (...args: any[]): T;\n}\n\nexport function MultiWindowService<T>() {\n  return function (constructor: Constructor<T>): Constructor<T> {\n    const constr = constructor as any;\n    const rootWindow = (window.opener || window) as any;\n    const newConstructor = (function(...args: any[]): T {\n      const hasInstance = rootWindow.__services.has(constr.name);\n      if (!hasInstance) {\n        const storedConstr = rootWindow.__serviceConstructors.get(constr.name) || constr;\n        rootWindow.__services.set(constr.name, new storedConstr(...args));\n      }\n      return rootWindow.__services.get(constr.name);\n    }) as any;\n    if (window === rootWindow) {\n      const metadata = (Reflect as any).getMetadata('design:paramtypes', constr);\n      (Reflect as any).metadata('design:paramtypes', metadata)(newConstructor);\n    }\n    return newConstructor as Constructor<T>;\n  };\n}\n",
    "import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GoldenLayoutConfiguration } from './config';\nimport { GoldenLayoutService } from './golden-layout.service';\nimport { GoldenLayoutComponent } from './golden-layout.component';\n\n@NgModule({\n  declarations: [GoldenLayoutComponent],\n  exports: [GoldenLayoutComponent],\n  imports: [CommonModule]\n})\nexport class GoldenLayoutModule {\n  public static forRoot(config: GoldenLayoutConfiguration): ModuleWithProviders {\n    return {\n      ngModule: GoldenLayoutModule,\n      providers: [\n        GoldenLayoutService,\n        { provide: GoldenLayoutConfiguration, useValue: config }\n      ]\n    };\n  }\n}\n",
    "import {\n  isDevMode,\n  ComponentFactoryResolver,\n  ComponentFactory,\n  HostListener,\n  ViewContainerRef,\n  ElementRef,\n  Component,\n  OnInit,\n  OnDestroy,\n  ApplicationRef,\n  Type,\n  Input,\n  Optional,\n  Inject,\n  NgZone,\n  InjectionToken,\n  Injector,\n  ViewChild,\n} from '@angular/core';\nimport * as GoldenLayout from 'golden-layout';\n\nimport { GlOnResize, GlOnShow, GlOnHide, GlOnTab, GlOnClose } from './hooks';\nimport {\n  GoldenLayoutService,\n  ComponentInitCallbackFactory,\n  ComponentInitCallback\n} from './golden-layout.service';\nimport {\n  FallbackComponent,\n  FailedComponent,\n} from './fallback';\n\nexport const GoldenLayoutContainer = new InjectionToken('GoldenLayoutContainer');\nexport const GoldenLayoutComponentState = new InjectionToken('GoldenLayoutComponentState');\n/**\n * Type guard which determines if a component implements the GlOnResize interface.\n */\nfunction implementsGlOnResize(obj: any): obj is GlOnResize {\n  return typeof obj === 'object' && typeof obj.glOnResize === 'function';\n}\n\n/**\n * Type guard which determines if a component implements the GlOnShow interface.\n */\nfunction implementsGlOnShow(obj: any): obj is GlOnShow {\n  return typeof obj === 'object' && typeof obj.glOnShow === 'function';\n}\n\n/**\n * Type guard which determines if a component implements the GlOnHide interface.\n */\nfunction implementsGlOnHide(obj: any): obj is GlOnHide {\n  return typeof obj === 'object' && typeof obj.glOnHide === 'function';\n}\n\n/**\n * Type guard which determines if a component implements the GlOnTab interface.\n */\nfunction implementsGlOnTab(obj: any): obj is GlOnTab {\n  return typeof obj === 'object' && typeof obj.glOnTab === 'function';\n}\n\n/**\n * Type guard which determines if a component implements the GlOnClose interface.\n */\nfunction implementsGlOnClose(obj: any): obj is GlOnClose {\n  return typeof obj === 'object' && typeof obj.glOnClose === 'function';\n}\n\nclass Deferred<T> {\n  public promise: Promise<T>\n  public resolve: (val?: T) => void;\n  public reject: (err: any) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    })\n  }\n}\n\nconst COMPONENT_REF_KEY = '$componentRef';\n\n@Component({\n  selector: 'golden-layout-root',\n  styles: [`\n    .ng-golden-layout-root {\n      width:100%;\n      height:100%;\n    }`\n  ],\n  template: `<div class=\"ng-golden-layout-root\" #glroot></div>`\n})\nexport class GoldenLayoutComponent implements OnInit, OnDestroy, ComponentInitCallbackFactory {\n  private goldenLayout: GoldenLayout;\n  private topWindow: Window;\n  private isChildWindow: boolean;\n  private unloaded = false;\n  private onUnloaded = new Deferred<void>();\n  private fallbackType: ComponentInitCallback = null;\n  @ViewChild('glroot') private el: ElementRef;\n\n  constructor(private glService: GoldenLayoutService,\n              private viewContainer: ViewContainerRef,\n              private appref: ApplicationRef,\n              private componentFactoryResolver: ComponentFactoryResolver,\n              private ngZone: NgZone,\n              private readonly injector: Injector,\n              @Optional() @Inject(FallbackComponent) private readonly fallbackComponent: any) {\n    this.topWindow = glService.getRootWindow();\n    this.isChildWindow = glService.isChildWindow();\n    if (!!fallbackComponent) {\n      this.fallbackType = this.createComponentInitCallback(fallbackComponent);\n    }\n    if (this.isChildWindow) {\n      window.document.title = window.document.URL;\n      (console as any).__log = console.log;\n      console.log = this.topWindow.console.log;\n    }\n    if (isDevMode()) console.log(`Create@${this.isChildWindow ? 'child' : 'root'}!`);\n  }\n\n  public ngOnInit(): void {\n    if (isDevMode()) console.log(`Init@${this.isChildWindow ? 'child' : 'root'}!`);\n    let anyWin = this.topWindow as any;\n    if (!this.isChildWindow) {\n      anyWin.__apprefs = [];\n      anyWin.__injector = this.injector;\n    }\n\n    // attach the application reference to the root window, save the original 'tick' method\n    anyWin.__apprefs.push(this.appref);\n    (this.appref as any).__tick = this.appref.tick;\n\n    this.appref.tick = (): void => {\n      for (const ar of (this.topWindow as any).__apprefs) {\n        ar._zone.run(() => ar.__tick());\n      }\n    };\n\n    this.glService.getState().then((layout: any) => {\n      this._createLayout(layout);\n    });\n  }\n\n  public ngOnDestroy(): void {\n    if (isDevMode()) console.log(`Destroy@${this.isChildWindow ? 'child' : 'root'}!`);\n    if (this.isChildWindow) {\n      console.log = (console as any).__log;\n    }\n    this.unloaded = true;\n    // restore the original tick method.\n    // this appens in two cases:\n    // either the window is closed, after that it's not important to restore the tick method\n    // or within the root window, where we HAVE to restore the original tick method\n    this.appref.tick = (this.appref as any).__tick;\n  }\n\n  @HostListener('window:beforeunload')\n  public unloadHandler(): void {\n    if (isDevMode()) console.log(`Unload@${this.isChildWindow ? 'child' : 'root'}`);\n    if (this.unloaded) {\n      return;\n    }\n    this.onUnloaded.resolve();\n    this.unloaded = true;\n    if (this.isChildWindow) { // if the top window is unloaded, the whole application is destroyed.\n      const index = (this.topWindow as any).__apprefs.indexOf(this.appref);\n      (this.topWindow as any).__apprefs.splice(index, 1);\n    }\n  }\n\n  private _createLayout(layout: any): void {\n    this.goldenLayout = new GoldenLayout(layout, $(this.el.nativeElement));\n    this.goldenLayout.getComponent = (type) => {\n      const component = (this.goldenLayout as any)._components[type] || this.fallbackType;\n      if (!component) {\n        throw new Error(`Unknown component \"${type}\"`);\n      }\n      return component;\n    };\n    // Register all golden-layout components.\n    this.glService.initialize(this.goldenLayout, this);\n\n    // Initialize the layout.\n    this.goldenLayout.init();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: any): void {\n    if (this.goldenLayout) {\n      this.goldenLayout.updateSize();\n    }\n  }\n\n  public createComponentInitCallback(componentType: Type<any>): ComponentInitCallback {\n    // Can't use an ES6 lambda here, since it is not a constructor\n    const self = this;\n    return function (container: GoldenLayout.Container, componentState: any) {\n      self.ngZone.run(() => {\n        // Create an instance of the angular component.\n        const factory = self.componentFactoryResolver.resolveComponentFactory(componentType);\n        let failedComponent: string = null;\n        if (componentType === self.fallbackComponent) {\n          // Failed to find the component constructor **AND** we have a fallback component defined,\n          // so lookup the failed component's name and inject it into the fallback component.\n          failedComponent = (container as any)._config.componentName;\n        }\n        const injector = self._createComponentInjector(container, componentState, failedComponent);\n        const componentRef = self.viewContainer.createComponent(factory, undefined, injector);\n\n        // Bind the new component to container's client DOM element.\n        container.getElement().append($(componentRef.location.nativeElement));\n        self._bindEventHooks(container, componentRef.instance);\n        let destroyed = false;\n        container.on('destroy', () => {\n          if (destroyed) {\n            return;\n          }\n          destroyed = true;\n          $(componentRef.location.nativeElement).remove();\n          componentRef.destroy();\n        });\n        self.onUnloaded.promise.then(() => {\n          if (destroyed) {\n            return;\n          }\n          destroyed = true;\n          $(componentRef.location.nativeElement).remove();\n          componentRef.destroy();\n        });\n      });\n    };\n  }\n\n  /**\n   * Creates an injector capable of injecting the GoldenLayout object,\n   * component container, and initial component state.\n   */\n  private _createComponentInjector(\n    container: GoldenLayout.Container,\n    componentState: any,\n    failed: string | null,\n  ): Injector {\n    const providers = [\n      {\n        provide: GoldenLayoutContainer,\n        useValue: container\n      },\n      {\n        provide: GoldenLayoutComponentState,\n        useValue: componentState\n      },\n      {\n        provide: GoldenLayout,\n        useValue: this.goldenLayout\n      },\n    ];\n    if (!!failed) {\n      providers.push({\n        provide: FailedComponent,\n        useValue: failed,\n      });\n    }\n    return Injector.create(providers, this.injector);\n  }\n\n  /**\n   * Registers an event handler for each implemented hook.\n   * @param container Golden Layout component container.\n   * @param component Angular component instance.\n   */\n  private _bindEventHooks(container: GoldenLayout.Container, component: any): void {\n    if (implementsGlOnResize(component)) {\n      container.on('resize', () => {\n        component.glOnResize();\n      });\n    }\n\n    if (implementsGlOnShow(component)) {\n      container.on('show', () => {\n        component.glOnShow();\n      });\n    }\n\n    if (implementsGlOnHide(component)) {\n      container.on('hide', () => {\n        component.glOnHide();\n      });\n    }\n\n    if (implementsGlOnTab(component)) {\n      container.on('tab', (tab) => {\n        component.glOnTab(tab);\n      });\n    }\n\n    if (implementsGlOnClose(component)) {\n      let hookEstablished = false;\n      container.on('tab', (tab) => {\n        /* GoldenLayout SHOULD send a tabEvent when the component is placed within a tab control, giving\n           us access to the tab object, which allows us to patch the close handler to actually call the\n           right close option.\n        */\n        if (hookEstablished) {\n          return;\n        }\n        hookEstablished = true;\n        tab.closeElement.off('click');\n        const originalClose = tab._onCloseClick.bind(tab);\n        tab._onCloseClick = (ev) => {\n          ev.stopPropagation();\n          tab.contentItem.container.close();\n        };\n        tab._onCloseClickFn = tab._onCloseClick.bind(tab);\n        tab.closeElement.click(tab._onCloseClickFn);\n      });\n\n      const containerClose = container.close.bind(container);\n      container.close = () => {\n        console.log(\"Container close:\", container);\n        if (!(container as any)._config.isClosable) {\n          return false;\n        }\n        component.glOnClose().then(() => {\n          containerClose();\n        }, () => { /* Prevent close, don't care about rejections */ });\n      };\n    }\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\nexport const FallbackComponent = new InjectionToken(\"fallback component\");\nexport const FailedComponent = new InjectionToken<string>(\"failed component\");\n",
    "import { Inject, Injectable, Type, Optional } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as GoldenLayout from 'golden-layout';\nimport { GoldenLayoutConfiguration, ComponentConfiguration } from './config';\nimport { GoldenLayoutStateStore, StateStore, LocalStorageStateStore } from './state';\n\n/**\n * golden-layout component initialization callback type.\n */\nexport interface ComponentInitCallback extends Function {\n  (container: GoldenLayout.Container, componentState: any): void;\n}\n\nexport interface ComponentInitCallbackFactory {\n  createComponentInitCallback(component: Type<any>): ComponentInitCallback;\n}\n\n@Injectable()\nexport class GoldenLayoutService {\n  private _layout: GoldenLayout = null;\n\n  constructor(@Inject(GoldenLayoutConfiguration) public readonly config: GoldenLayoutConfiguration,\n              @Optional() @Inject(GoldenLayoutStateStore) private readonly stateStore: StateStore) {}\n\n  public initialize(goldenLayout: GoldenLayout, componentInitCallbackFactory: ComponentInitCallbackFactory) {\n    this._layout = goldenLayout;\n    this.config.components.forEach((componentConfig: ComponentConfiguration) => {\n      const componentInitCallback = componentInitCallbackFactory.createComponentInitCallback(componentConfig.component);\n      goldenLayout.registerComponent(componentConfig.componentName, componentInitCallback);\n    });\n\n    if (this.stateStore) {\n      (<GoldenLayout.EventEmitter>(<any>goldenLayout)).on('stateChanged', () => {\n        this._saveState(goldenLayout);\n      });\n    }\n  }\n\n  private _saveState(goldenLayout: GoldenLayout): void {\n    if (this.stateStore && goldenLayout.isInitialised) {\n      try {\n        this.stateStore.writeState(goldenLayout.toConfig());\n      } catch(ex) {\n        // Workaround for https://github.com/deepstreamIO/golden-layout/issues/192\n      }\n    }\n  }\n\n  public getState(): Promise<any>{\n    if (this.stateStore) {\n      return this.stateStore.loadState().catch(() => {\n        return this.config.defaultLayout;\n      });\n    }\n\n    return Promise.resolve(this.config.defaultLayout);\n  }\n\n  public getRegisteredComponents(): ComponentConfiguration[] {\n    return this.config.components;\n  }\n\n  public createNewComponent(comp: ComponentConfiguration, title?: string, state?: any) {\n    // create content item\n    const content = this._layout.createContentItem({\n      type: 'component',\n      componentName: comp.componentName,\n      componentState: state,\n      title: title,\n    }) as any;\n    // search for the first lm-stack (a stack should be there always.)\n    const root = this._layout.root;\n    let element: GoldenLayout.ContentItem = null;\n    if (!root.contentItems || root.contentItems.length === 0) {\n      element = root;\n    } else {\n      element = this.findStack(root.contentItems);\n    }\n    if (element === null) {\n      throw new Error(\"this should never happen!\");\n    }\n    element.addChild(content);\n  }\n\n  private findStack(contentItems: GoldenLayout.ContentItem[]): GoldenLayout.ContentItem {\n    if (!contentItems) {\n      return null;\n    }\n    for (const x of contentItems) {\n      if (x.type === 'stack') {\n        return x;\n      }\n      const s = this.findStack(x.contentItems);\n      if (s !== null) {\n        return s;\n      }\n    }\n  }\n\n  public isChildWindow(): boolean {\n    return !!window.opener;\n  }\n\n  public getRootWindow(): Window {\n    return window.opener || window;\n  }\n}\n",
    "import { InjectionToken, Provider } from '@angular/core';\n\nexport const GoldenLayoutStateStore = new InjectionToken('GoldenLayoutStateStore');\n\nexport interface StateStore {\n  writeState(state:any): void;\n\n  loadState(): Promise<any>\n}\n\nexport const DEFAULT_LOCAL_STORAGE_STATE_STORE_KEY = '$ng-golden-layout-state';\n\nexport class LocalStorageStateStore implements StateStore {\n  constructor(private readonly key: string) {}\n\n  public writeState(state: any): void { \n    localStorage.setItem(this.key, JSON.stringify(state));\n  }\n\n  public loadState(): Promise<any> {\n    const state = localStorage.getItem( this.key );\n    return state \n      ? Promise.resolve(JSON.parse(state)) \n      : Promise.reject(`No state found using key: ${this.key}`);\n  }\n}\n\nexport function DEFAULT_LOCAL_STORAGE_STATE_STORE_FACTORY() {\n  return new LocalStorageStateStore(DEFAULT_LOCAL_STORAGE_STATE_STORE_KEY);\n}\n\nexport const DEFAULT_LOCAL_STORAGE_STATE_STORE = new LocalStorageStateStore(DEFAULT_LOCAL_STORAGE_STATE_STORE_KEY);\n\nexport const DEFAULT_LOCAL_STORAGE_STATE_STORE_PROVIDER: Provider = {\n  provide: GoldenLayoutStateStore,\n  useFactory: DEFAULT_LOCAL_STORAGE_STATE_STORE_FACTORY\n};\n",
    "import { InjectionToken, Type } from '@angular/core';\nimport * as GoldenLayout from 'golden-layout';\n\nexport interface ComponentConfiguration {\n  /**\n   * Name used to register compoent with GoldenLayout.\n   */\n  componentName: string;\n\n  /**\n   * Angular component type.\n   */\n  component: Type<any>;\n}\n\nexport interface GoldenLayoutConfiguration {\n  /**\n   * Array of component configurations.\n   */\n  components: ComponentConfiguration[];\n\n  /**\n   * Initial component layout configuration.\n   */\n  defaultLayout: GoldenLayout.Config;\n\n}\n\nexport const GoldenLayoutConfiguration = new InjectionToken('GoldenLayoutConfiguration');\n"
  ],
  "names": [],
  "mappings": "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"
}
